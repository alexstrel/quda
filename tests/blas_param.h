//
// Auto-tuned blas CUDA parameters, generated by blas_test
//

static int blas_threads[26][3] = {
  {  64,  128,  544},  // Kernel  0: copyCuda (high source precision)
  {  64,   64,  352},  // Kernel  1: copyCuda (low source precision)
  {  64,  224,  128},  // Kernel  2: axpbyCuda
  {  64,  224,  256},  // Kernel  3: xpyCuda
  {  64,  128,  256},  // Kernel  4: axpyCuda
  {  64,  128,  128},  // Kernel  5: xpayCuda
  {  64,  128,  192},  // Kernel  6: mxpyCuda
  { 160,  192,  192},  // Kernel  7: axCuda
  {  64,  128,  128},  // Kernel  8: caxpyCuda
  {  64,  128,  128},  // Kernel  9: caxpbyCuda
  {  64,  224,  224},  // Kernel 10: cxpaypbzCuda
  { 320,  128, 1024},  // Kernel 11: axpyBzpcxCuda
  {  32,  128,  960},  // Kernel 12: axpyZpbxCuda
  {  32,  128,  224},  // Kernel 13: xpayZpbypcwCuda
  {  32,  128,  128},  // Kernel 14: xpaYpxZpbxCuda
  {  64,  160,   96},  // Kernel 15: caxpbypzYmbwCuda
  { 128,  256,  512},  // Kernel 16: sumCuda
  { 128,  256,  256},  // Kernel 17: normCuda
  { 128,  512,  512},  // Kernel 18: reDotProductCuda
  {  64,  256,  512},  // Kernel 19: axpyNormCuda
  { 128,  256,  512},  // Kernel 20: xmyNormCuda
  { 128,  512,  128},  // Kernel 21: cDotProductCuda
  { 128,  256,  512},  // Kernel 22: xpaycDotzyCuda
  { 128,  256,  256},  // Kernel 23: cDotProductNormACuda
  { 128,  256,  256},  // Kernel 24: cDotProductNormBCuda
  {  64,  128,  256}   // Kernel 25: caxpbypzYmbwcDotProductWYNormYCuda
};

static int blas_blocks[26][3] = {
  { 2048, 65536,  1024},  // Kernel  0: copyCuda (high source precision)
  { 8192, 16384, 32768},  // Kernel  1: copyCuda (low source precision)
  { 4096,  8192, 32768},  // Kernel  2: axpbyCuda
  { 4096,  8192, 16384},  // Kernel  3: xpyCuda
  { 4096, 16384, 16384},  // Kernel  4: axpyCuda
  { 4096, 16384, 32768},  // Kernel  5: xpayCuda
  { 4096, 16384, 32768},  // Kernel  6: mxpyCuda
  { 2048, 16384, 65536},  // Kernel  7: axCuda
  { 4096, 16384, 32768},  // Kernel  8: caxpyCuda
  { 4096, 16384, 65536},  // Kernel  9: caxpbyCuda
  { 4096,  8192, 65536},  // Kernel 10: cxpaypbzCuda
  {  128, 32768,  4096},  // Kernel 11: axpyBzpcxCuda
  { 2048, 32768,  4096},  // Kernel 12: axpyZpbxCuda
  { 2048, 32768, 16384},  // Kernel 13: xpayZpbypcwCuda
  { 4096, 32768, 32768},  // Kernel 14: xpaYpxZpbxCuda
  { 4096, 65536, 65536},  // Kernel 15: caxpbypzYmbwCuda
  { 1024,  1024,  1024},  // Kernel 16: sumCuda
  { 1024,  1024,  2048},  // Kernel 17: normCuda
  {  512,  1024,  1024},  // Kernel 18: reDotProductCuda
  { 2048,  4096,  4096},  // Kernel 19: axpyNormCuda
  { 1024,  4096,  4096},  // Kernel 20: xmyNormCuda
  {  512,   512,  2048},  // Kernel 21: cDotProductCuda
  { 1024,  2048,  2048},  // Kernel 22: xpaycDotzyCuda
  {  256,   256,  1024},  // Kernel 23: cDotProductNormACuda
  {  256,   256,  1024},  // Kernel 24: cDotProductNormBCuda
  {  512,  1024,   512}   // Kernel 25: caxpbypzYmbwcDotProductWYNormYCuda
};
