//
// Auto-tuned blas CUDA parameters, generated by blas_test
//

static int blas_threads[33][3] = {
  {  64,  448,  544},  // Kernel  0: copyCuda (high source precision)
  { 576,  544,  544},  // Kernel  1: copyCuda (low source precision)
  {  64,  384,  512},  // Kernel  2: axpbyCuda
  {  64,  384,  512},  // Kernel  3: xpyCuda
  {  64,  384,  672},  // Kernel  4: axpyCuda
  {  64,  384,  512},  // Kernel  5: xpayCuda
  {  64,  384,  672},  // Kernel  6: mxpyCuda
  {  96,  384,  768},  // Kernel  7: axCuda
  {  64,  384,  448},  // Kernel  8: caxpyCuda
  {  64,  384,  384},  // Kernel  9: caxpbyCuda
  {  64,  224,  384},  // Kernel 10: cxpaypbzCuda
  {  64,  416,  768},  // Kernel 11: axpyBzpcxCuda
  {  64,  416,  768},  // Kernel 12: axpyZpbxCuda
  { 224,  384,  544},  // Kernel 13: caxpbypzYmbwCuda
  { 128,  384,  384},  // Kernel 14: cabxpyAxCuda
  {  64,  224,  896},  // Kernel 15: caxpbypzCuda
  {  64,  224,  384},  // Kernel 16: caxpbypczpwCuda
  {  64,  512,   64},  // Kernel 17: caxpyXmazCuda
  {  64,  128,   64},  // Kernel 18: caxpyXmazDDCuda
  { 128,  256,  256},  // Kernel 19: normCuda
  { 128,  128,  128},  // Kernel 20: reDotProductCuda
  {  64,  256,  256},  // Kernel 21: axpyNormCuda
  {  64,  256,  256},  // Kernel 22: xmyNormCuda
  {  64,  256,  128},  // Kernel 23: caxpyNormCuda
  {  64,  256,   64},  // Kernel 24: caxpyXmazNormXCuda
  {  64,  256,  256},  // Kernel 25: cabxpyAxNormCuda
  { 128,  128,  128},  // Kernel 26: cDotProductCuda
  {  64,  128,   64},  // Kernel 27: xpaycDotzyCuda
  {  64,  128,  128},  // Kernel 28: caxpyDotzyCuda
  { 128,  128,  128},  // Kernel 29: cDotProductNormACuda
  { 128,  256,  128},  // Kernel 30: cDotProductNormBCuda
  {  64,  128,  256},  // Kernel 31: caxpbypzYmbwcDotProductWYNormYCuda
  { 128,  256,  128}   // Kernel 32: cDotProductNormALocalCuda
};

static int blas_blocks[33][3] = {
  { 1024,   128,    64},  // Kernel  0: copyCuda (high source precision)
  {   64,    64,    64},  // Kernel  1: copyCuda (low source precision)
  {  512,  1024,  1024},  // Kernel  2: axpbyCuda
  {  512,  1024,  1024},  // Kernel  3: xpyCuda
  {  512,  1024,  1024},  // Kernel  4: axpyCuda
  {  512,  1024,  1024},  // Kernel  5: xpayCuda
  {  512,  1024,  1024},  // Kernel  6: mxpyCuda
  {  512,  1024,  1024},  // Kernel  7: axCuda
  {  512,  1024,  1024},  // Kernel  8: caxpyCuda
  {  512,  1024,  1024},  // Kernel  9: caxpbyCuda
  {  512,  1024,  1024},  // Kernel 10: cxpaypbzCuda
  {  512,  1024,   512},  // Kernel 11: axpyBzpcxCuda
  {  512,  1024,   512},  // Kernel 12: axpyZpbxCuda
  {  128,  1024,   512},  // Kernel 13: caxpbypzYmbwCuda
  {  256,  1024,  1024},  // Kernel 14: cabxpyAxCuda
  { 1024,  1024,   512},  // Kernel 15: caxpbypzCuda
  {  512,  1024,  1024},  // Kernel 16: caxpbypczpwCuda
  {  512,  1024,  1024},  // Kernel 17: caxpyXmazCuda
  {  512,  1024,  1024},  // Kernel 18: caxpyXmazDDCuda
  {   64,    64,   128},  // Kernel 19: normCuda
  {   64,   512,   512},  // Kernel 20: reDotProductCuda
  {  512,    64,  1024},  // Kernel 21: axpyNormCuda
  {  512,    64,  1024},  // Kernel 22: xmyNormCuda
  {  512,   256,  1024},  // Kernel 23: caxpyNormCuda
  {  512,   512,  1024},  // Kernel 24: caxpyXmazNormXCuda
  {  512,  1024,  1024},  // Kernel 25: cabxpyAxNormCuda
  {   64,   512,    64},  // Kernel 26: cDotProductCuda
  {  512,    64,    64},  // Kernel 27: xpaycDotzyCuda
  {  512,   512,  1024},  // Kernel 28: caxpyDotzyCuda
  {   64,    64,    64},  // Kernel 29: cDotProductNormACuda
  {   64,    64,    64},  // Kernel 30: cDotProductNormBCuda
  {  512,  1024,   512},  // Kernel 31: caxpbypzYmbwcDotProductWYNormYCuda
  {   64,    64,    64}   // Kernel 32: cDotProductNormALocalCuda
};
